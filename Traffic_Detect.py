# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/108sWraksM9On1_vdxtZGYWCG-Jg8r4-H
"""

pip install yolov5

import yolov5

import cv2
from yolov5 import YOLOv5

image_path = 'test-1.jpg'

# Define the output path for the processed image
output_image_path = 'out-test-1.jpg'

model = YOLOv5('/content/yolov5/yolov5s.pt', device='cpu')

image = cv2.imread(image_path)

results = model.predict(image)

class_names = ['car', 'motorcycle', 'bus', 'truck']  # Define the classes you consider as vehicles
vehicle_count = 0

for detection in results.xyxy[0]:
    class_id = int(detection[5])  # Class ID of the detection
    confidence = float(detection[4])  # Confidence score of the detection
    if confidence > 0.5:
        # Check if class_id is within the range of class_names
        if 0 <= class_id < len(class_names):
            class_name = class_names[class_id]  # Get the class name based on class ID
            # Check if the detected object is a vehicle
            if class_name in ['car', 'motorcycle', 'bus', 'truck']:
                vehicle_count += 1
                # Draw bounding box and label on the image
                x1, y1, x2, y2 = map(int, detection[:4])
                cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 2)
                label = f"{class_name} ({confidence:.2f})"
                cv2.putText(image, label, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 1)
        else:
            class_name = 'Unknown'  # Use a default name for unknown classes

print(f"Number of vehicles detected: {vehicle_count}")

# Save the processed image
cv2.imwrite(output_image_path, image)